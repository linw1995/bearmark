name: "CI"

on:
  pull_request:
  push:
    branches: ["main"]
  schedule:
    # Run every Friday at 00:00 UTC
    - cron: "0 0 * * 5"
env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-nix

      - name: Run lints
        run: |
          ./scripts/cli.sh lint

  test:
    needs:
      - lint
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: bearmark
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt install -yq \
            build-essential \
            libssl-dev \
            pkg-config
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: cargo-install cargo-tarpaulin
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-tarpaulin
          git: https://github.com/xd009642/tarpaulin.git
          branch: develop
      - name: cargo-install diesel_cli
        uses: baptiste0928/cargo-install@v3
        with:
          crate: diesel_cli
          features: postgres
          args: --no-default-features
      - name: Setup
        run: |
          ./scripts/cli.sh setup
        env:
          DATABASE_URL: postgres://postgres:example@localhost:5432/bearmark

      - name: Run tests
        run: |
          ./scripts/cli.sh coverage-xml
        env:
          RUST_LOG: bearmark=debug,rocket=info
          BM_DATABASES: "{main={url=\"postgres://postgres:example@localhost:5432/bearmark\"}}"

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          file: ./cobertura.xml
          token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          fail_ci_if_error: ${{ github.actor != 'dependabot[bot]' }}
